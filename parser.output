Terminals unused in grammar

   new_line
   whitespace
   EOFile
   digit
   letter
   underscore
   start_comment
   end_comment
   line_comment
   other


State 101 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 stmt: expr semicolon
    3     | ifstmt
    4     | whilestmt
    5     | forstmt
    6     | returnstmt

    7 $@1: %empty

    8 stmt: $@1 block
    9     | funcdef
   10     | BREAK semicolon
   11     | CONTINUE semicolon
   12     | semicolon

   13 statements: statements stmt
   14           | stmt

   15 expr: assignexpr
   16     | boolexpr
   17     | arithexpr
   18     | relexpr
   19     | term

   20 arithexpr: expr plus expr
   21          | expr minus expr
   22          | expr mul expr
   23          | expr division expr
   24          | expr mod expr

   25 relexpr: expr b_greater expr
   26        | expr b_less expr
   27        | expr b_greater_eq expr
   28        | expr b_less_eq expr
   29        | expr b_equals expr
   30        | expr b_not_equal expr

   31 $@2: %empty

   32 boolexpr: expr OR $@2 M expr

   33 $@3: %empty

   34 boolexpr: expr AND $@3 M expr

   35 term: left_parenthesis expr right_parenthesis
   36     | NOT expr
   37     | minus expr

   38 $@4: %empty

   39 term: increment $@4 lvalue
   40     | lvalue increment

   41 $@5: %empty

   42 term: decrement $@5 lvalue
   43     | lvalue decrement
   44     | primary

   45 assignexpr: lvalue assign expr

   46 primary: lvalue
   47        | call
   48        | objectdef
   49        | left_parenthesis funcdef right_parenthesis
   50        | const

   51 lvalue: id
   52       | local id
   53       | double_colon id
   54       | member

   55 member: tableitem
   56       | call dot id
   57       | call left_bracket expr right_bracket

   58 $@6: %empty

   59 tableitem: lvalue $@6 dot id

   60 $@7: %empty

   61 tableitem: lvalue $@7 left_bracket expr right_bracket

   62 call: call left_parenthesis elist right_parenthesis
   63     | lvalue callsuffix
   64     | left_parenthesis funcdef right_parenthesis left_parenthesis elist right_parenthesis

   65 callsuffix: normcall
   66           | methodcall

   67 normcall: left_parenthesis elist right_parenthesis

   68 method_id: id

   69 methodcall: double_dot method_id left_parenthesis elist right_parenthesis

   70 elist_l: expr
   71        | elist_l comma expr

   72 elist: elist_l
   73      | %empty

   74 objectdef: left_bracket elist right_bracket
   75          | left_bracket indexed right_bracket

   76 indexedelem: left_curly expr colon expr right_curly

   77 indexed: indexedelem
   78        | indexed comma indexedelem

   79 block_l: block_l stmt
   80        | %empty

   81 $@8: %empty

   82 block: left_curly $@8 block_l right_curly

   83 func_name: id
   84          | %empty

   85 funcdef: N func_prefix func_args func_body

   86 func_prefix: function func_name

   87 func_args: left_parenthesis idlist right_parenthesis

   88 func_body: func_block_start block func_block_end

   89 number: integer
   90       | real

   91 const: number
   92      | STRING
   93      | NIL
   94      | TRUE
   95      | FALSE

   96 idlist_l: id
   97         | idlist_l comma id

   98 idlist: idlist_l
   99       | %empty

  100 ifprefix: IF left_parenthesis expr right_parenthesis

  101 elseprefix: ELSE

  102 ifstmt: ifprefix stmt elseprefix stmt
  103       | ifprefix stmt

  104 whilestart: WHILE

  105 whilecond: left_parenthesis expr right_parenthesis

  106 whilestmt: whilestart whilecond loopstmt

  107 N: %empty

  108 M: %empty

  109 forprefix: FOR left_parenthesis elist semicolon M expr semicolon

  110 forstmt: forprefix N elist right_parenthesis N loopstmt N

  111 loopstart: %empty

  112 loopend: %empty

  113 loopstmt: loopstart stmt loopend

  114 func_block_start: %empty

  115 func_block_end: %empty

  116 $@9: %empty

  117 returnstmt: RETURN $@9 expr semicolon

  118 $@10: %empty

  119 returnstmt: RETURN $@10 semicolon


Terminals, with rules where they appear

$end (0) 0
error (256)
new_line (258)
whitespace (259)
EOFile (260)
AND (261) 34
OR (262) 32
NOT (263) 36
TRUE (264) 94
FALSE (265) 95
NIL (266) 93
IF (267) 100
ELSE (268) 101
WHILE (269) 104
FOR (270) 109
BREAK (271) 10
CONTINUE (272) 11
function (273) 86
RETURN (274) 117 119
local (275) 52
assign (276) 45
plus (277) 20
minus (278) 21 37
uminus (279)
mul (280) 22
division (281) 23
mod (282) 24
increment (283) 39 40
decrement (284) 42 43
b_equals (285) 29
b_not_equal (286) 30
b_greater (287) 25
b_greater_eq (288) 27
b_less (289) 26
b_less_eq (290) 28
digit (291)
letter (292)
underscore (293)
integer (294) 89
real (295) 90
id (296) 51 52 53 56 59 68 83 96 97
STRING (297) 92
left_curly (298) 76 82
right_curly (299) 76 82
left_bracket (300) 57 61 74 75
right_bracket (301) 57 61 74 75
left_parenthesis (302) 35 49 62 64 67 69 87 100 105 109
right_parenthesis (303) 35 49 62 64 67 69 87 100 105 110
semicolon (304) 2 10 11 12 109 117 119
comma (305) 71 78 97
colon (306) 76
double_colon (307) 53
dot (308) 56 59
double_dot (309) 69
start_comment (310)
end_comment (311)
line_comment (312)
other (313)


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
program (60)
    on left: 1, on right: 0
stmt (61)
    on left: 2 3 4 5 6 8 9 10 11 12, on right: 13 14 79 102 103 113
$@1 (62)
    on left: 7, on right: 8
statements (63)
    on left: 13 14, on right: 1 13
expr (64)
    on left: 15 16 17 18 19, on right: 2 20 21 22 23 24 25 26 27 28
    29 30 32 34 35 36 37 45 57 61 70 71 76 100 105 109 117
arithexpr (65)
    on left: 20 21 22 23 24, on right: 17
relexpr (66)
    on left: 25 26 27 28 29 30, on right: 18
boolexpr (67)
    on left: 32 34, on right: 16
$@2 (68)
    on left: 31, on right: 32
$@3 (69)
    on left: 33, on right: 34
term (70)
    on left: 35 36 37 39 40 42 43 44, on right: 19
$@4 (71)
    on left: 38, on right: 39
$@5 (72)
    on left: 41, on right: 42
assignexpr (73)
    on left: 45, on right: 15
primary (74)
    on left: 46 47 48 49 50, on right: 44
lvalue (75)
    on left: 51 52 53 54, on right: 39 40 42 43 45 46 59 61 63
member (76)
    on left: 55 56 57, on right: 54
tableitem (77)
    on left: 59 61, on right: 55
$@6 (78)
    on left: 58, on right: 59
$@7 (79)
    on left: 60, on right: 61
call (80)
    on left: 62 63 64, on right: 47 56 57 62
callsuffix (81)
    on left: 65 66, on right: 63
normcall (82)
    on left: 67, on right: 65
method_id (83)
    on left: 68, on right: 69
methodcall (84)
    on left: 69, on right: 66
elist_l (85)
    on left: 70 71, on right: 71 72
elist (86)
    on left: 72 73, on right: 62 64 67 69 74 109 110
objectdef (87)
    on left: 74 75, on right: 48
indexedelem (88)
    on left: 76, on right: 77 78
indexed (89)
    on left: 77 78, on right: 75 78
block_l (90)
    on left: 79 80, on right: 79 82
block (91)
    on left: 82, on right: 8 88
$@8 (92)
    on left: 81, on right: 82
func_name (93)
    on left: 83 84, on right: 86
funcdef (94)
    on left: 85, on right: 9 49 64
func_prefix (95)
    on left: 86, on right: 85
func_args (96)
    on left: 87, on right: 85
func_body (97)
    on left: 88, on right: 85
number (98)
    on left: 89 90, on right: 91
const (99)
    on left: 91 92 93 94 95, on right: 50
idlist_l (100)
    on left: 96 97, on right: 97 98
idlist (101)
    on left: 98 99, on right: 87
ifprefix (102)
    on left: 100, on right: 102 103
elseprefix (103)
    on left: 101, on right: 102
ifstmt (104)
    on left: 102 103, on right: 3
whilestart (105)
    on left: 104, on right: 106
whilecond (106)
    on left: 105, on right: 106
whilestmt (107)
    on left: 106, on right: 4
N (108)
    on left: 107, on right: 85 110
M (109)
    on left: 108, on right: 32 34 109
forprefix (110)
    on left: 109, on right: 110
forstmt (111)
    on left: 110, on right: 5
loopstart (112)
    on left: 111, on right: 113
loopend (113)
    on left: 112, on right: 113
loopstmt (114)
    on left: 113, on right: 106 110
func_block_start (115)
    on left: 114, on right: 88
func_block_end (116)
    on left: 115, on right: 88
returnstmt (117)
    on left: 117 119, on right: 6
$@9 (118)
    on left: 116, on right: 117
$@10 (119)
    on left: 118, on right: 119


State 0

    0 $accept: . program $end

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    IF                shift, and go to state 5
    WHILE             shift, and go to state 6
    FOR               shift, and go to state 7
    BREAK             shift, and go to state 8
    CONTINUE          shift, and go to state 9
    RETURN            shift, and go to state 10
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    semicolon         shift, and go to state 21
    double_colon      shift, and go to state 22

    function  reduce using rule 107 (N)
    $default  reduce using rule 7 ($@1)

    program     go to state 23
    stmt        go to state 24
    $@1         go to state 25
    statements  go to state 26
    expr        go to state 27
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    funcdef     go to state 39
    number      go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    N           go to state 46
    forprefix   go to state 47
    forstmt     go to state 48
    returnstmt  go to state 49


State 1

   36 term: NOT . expr

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 50
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 2

   94 const: TRUE .

    $default  reduce using rule 94 (const)


State 3

   95 const: FALSE .

    $default  reduce using rule 95 (const)


State 4

   93 const: NIL .

    $default  reduce using rule 93 (const)


State 5

  100 ifprefix: IF . left_parenthesis expr right_parenthesis

    left_parenthesis  shift, and go to state 51


State 6

  104 whilestart: WHILE .

    $default  reduce using rule 104 (whilestart)


State 7

  109 forprefix: FOR . left_parenthesis elist semicolon M expr semicolon

    left_parenthesis  shift, and go to state 52


State 8

   10 stmt: BREAK . semicolon

    semicolon  shift, and go to state 53


State 9

   11 stmt: CONTINUE . semicolon

    semicolon  shift, and go to state 54


State 10

  117 returnstmt: RETURN . $@9 expr semicolon
  119           | RETURN . $@10 semicolon

    semicolon  reduce using rule 118 ($@10)
    $default   reduce using rule 116 ($@9)

    $@9   go to state 55
    $@10  go to state 56


State 11

   52 lvalue: local . id

    id  shift, and go to state 57


State 12

   37 term: minus . expr

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 58
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 13

   39 term: increment . $@4 lvalue

    $default  reduce using rule 38 ($@4)

    $@4  go to state 59


State 14

   42 term: decrement . $@5 lvalue

    $default  reduce using rule 41 ($@5)

    $@5  go to state 60


State 15

   89 number: integer .

    $default  reduce using rule 89 (number)


State 16

   90 number: real .

    $default  reduce using rule 90 (number)


State 17

   51 lvalue: id .

    $default  reduce using rule 51 (lvalue)


State 18

   92 const: STRING .

    $default  reduce using rule 92 (const)


State 19

   74 objectdef: left_bracket . elist right_bracket
   75          | left_bracket . indexed right_bracket

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_curly        shift, and go to state 61
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    $default  reduce using rule 73 (elist)

    expr         go to state 62
    arithexpr    go to state 28
    relexpr      go to state 29
    boolexpr     go to state 30
    term         go to state 31
    assignexpr   go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    tableitem    go to state 36
    call         go to state 37
    elist_l      go to state 63
    elist        go to state 64
    objectdef    go to state 38
    indexedelem  go to state 65
    indexed      go to state 66
    number       go to state 40
    const        go to state 41


State 20

   35 term: left_parenthesis . expr right_parenthesis
   49 primary: left_parenthesis . funcdef right_parenthesis
   64 call: left_parenthesis . funcdef right_parenthesis left_parenthesis elist right_parenthesis

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    $default  reduce using rule 107 (N)

    expr        go to state 67
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    funcdef     go to state 68
    number      go to state 40
    const       go to state 41
    N           go to state 46


State 21

   12 stmt: semicolon .

    $default  reduce using rule 12 (stmt)


State 22

   53 lvalue: double_colon . id

    id  shift, and go to state 69


State 23

    0 $accept: program . $end

    $end  shift, and go to state 70


State 24

   14 statements: stmt .

    $default  reduce using rule 14 (statements)


State 25

    8 stmt: $@1 . block

    left_curly  shift, and go to state 71

    block  go to state 72


State 26

    1 program: statements .
   13 statements: statements . stmt

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    IF                shift, and go to state 5
    WHILE             shift, and go to state 6
    FOR               shift, and go to state 7
    BREAK             shift, and go to state 8
    CONTINUE          shift, and go to state 9
    RETURN            shift, and go to state 10
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    semicolon         shift, and go to state 21
    double_colon      shift, and go to state 22

    function    reduce using rule 107 (N)
    left_curly  reduce using rule 7 ($@1)
    $default    reduce using rule 1 (program)

    stmt        go to state 73
    $@1         go to state 25
    expr        go to state 27
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    funcdef     go to state 39
    number      go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    N           go to state 46
    forprefix   go to state 47
    forstmt     go to state 48
    returnstmt  go to state 49


State 27

    2 stmt: expr . semicolon
   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr

    AND           shift, and go to state 74
    OR            shift, and go to state 75
    plus          shift, and go to state 76
    minus         shift, and go to state 77
    mul           shift, and go to state 78
    division      shift, and go to state 79
    mod           shift, and go to state 80
    b_equals      shift, and go to state 81
    b_not_equal   shift, and go to state 82
    b_greater     shift, and go to state 83
    b_greater_eq  shift, and go to state 84
    b_less        shift, and go to state 85
    b_less_eq     shift, and go to state 86
    semicolon     shift, and go to state 87


State 28

   17 expr: arithexpr .

    $default  reduce using rule 17 (expr)


State 29

   18 expr: relexpr .

    $default  reduce using rule 18 (expr)


State 30

   16 expr: boolexpr .

    $default  reduce using rule 16 (expr)


State 31

   19 expr: term .

    $default  reduce using rule 19 (expr)


State 32

   15 expr: assignexpr .

    $default  reduce using rule 15 (expr)


State 33

   44 term: primary .

    $default  reduce using rule 44 (term)


State 34

   40 term: lvalue . increment
   43     | lvalue . decrement
   45 assignexpr: lvalue . assign expr
   46 primary: lvalue .
   59 tableitem: lvalue . $@6 dot id
   61          | lvalue . $@7 left_bracket expr right_bracket
   63 call: lvalue . callsuffix

    assign            shift, and go to state 88
    increment         shift, and go to state 89
    decrement         shift, and go to state 90
    left_parenthesis  shift, and go to state 91
    double_dot        shift, and go to state 92

    left_bracket  reduce using rule 60 ($@7)
    dot           reduce using rule 58 ($@6)
    $default      reduce using rule 46 (primary)

    $@6         go to state 93
    $@7         go to state 94
    callsuffix  go to state 95
    normcall    go to state 96
    methodcall  go to state 97


State 35

   54 lvalue: member .

    $default  reduce using rule 54 (lvalue)


State 36

   55 member: tableitem .

    $default  reduce using rule 55 (member)


State 37

   47 primary: call .
   56 member: call . dot id
   57       | call . left_bracket expr right_bracket
   62 call: call . left_parenthesis elist right_parenthesis

    left_bracket      shift, and go to state 98
    left_parenthesis  shift, and go to state 99
    dot               shift, and go to state 100

    $default  reduce using rule 47 (primary)


State 38

   48 primary: objectdef .

    $default  reduce using rule 48 (primary)


State 39

    9 stmt: funcdef .

    $default  reduce using rule 9 (stmt)


State 40

   91 const: number .

    $default  reduce using rule 91 (const)


State 41

   50 primary: const .

    $default  reduce using rule 50 (primary)


State 42

  102 ifstmt: ifprefix . stmt elseprefix stmt
  103       | ifprefix . stmt

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    IF                shift, and go to state 5
    WHILE             shift, and go to state 6
    FOR               shift, and go to state 7
    BREAK             shift, and go to state 8
    CONTINUE          shift, and go to state 9
    RETURN            shift, and go to state 10
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    semicolon         shift, and go to state 21
    double_colon      shift, and go to state 22

    function  reduce using rule 107 (N)
    $default  reduce using rule 7 ($@1)

    stmt        go to state 101
    $@1         go to state 25
    expr        go to state 27
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    funcdef     go to state 39
    number      go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    N           go to state 46
    forprefix   go to state 47
    forstmt     go to state 48
    returnstmt  go to state 49


State 43

    3 stmt: ifstmt .

    $default  reduce using rule 3 (stmt)


State 44

  106 whilestmt: whilestart . whilecond loopstmt

    left_parenthesis  shift, and go to state 102

    whilecond  go to state 103


State 45

    4 stmt: whilestmt .

    $default  reduce using rule 4 (stmt)


State 46

   85 funcdef: N . func_prefix func_args func_body

    function  shift, and go to state 104

    func_prefix  go to state 105


State 47

  110 forstmt: forprefix . N elist right_parenthesis N loopstmt N

    $default  reduce using rule 107 (N)

    N  go to state 106


State 48

    5 stmt: forstmt .

    $default  reduce using rule 5 (stmt)


State 49

    6 stmt: returnstmt .

    $default  reduce using rule 6 (stmt)


State 50

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr
   36 term: NOT expr .

    $default  reduce using rule 36 (term)


State 51

  100 ifprefix: IF left_parenthesis . expr right_parenthesis

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 107
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 52

  109 forprefix: FOR left_parenthesis . elist semicolon M expr semicolon

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    $default  reduce using rule 73 (elist)

    expr        go to state 62
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    elist_l     go to state 63
    elist       go to state 108
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 53

   10 stmt: BREAK semicolon .

    $default  reduce using rule 10 (stmt)


State 54

   11 stmt: CONTINUE semicolon .

    $default  reduce using rule 11 (stmt)


State 55

  117 returnstmt: RETURN $@9 . expr semicolon

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 109
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 56

  119 returnstmt: RETURN $@10 . semicolon

    semicolon  shift, and go to state 110


State 57

   52 lvalue: local id .

    $default  reduce using rule 52 (lvalue)


State 58

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr
   37 term: minus expr .

    $default  reduce using rule 37 (term)


State 59

   39 term: increment $@4 . lvalue

    local             shift, and go to state 11
    id                shift, and go to state 17
    left_parenthesis  shift, and go to state 111
    double_colon      shift, and go to state 22

    lvalue     go to state 112
    member     go to state 35
    tableitem  go to state 36
    call       go to state 113


State 60

   42 term: decrement $@5 . lvalue

    local             shift, and go to state 11
    id                shift, and go to state 17
    left_parenthesis  shift, and go to state 111
    double_colon      shift, and go to state 22

    lvalue     go to state 114
    member     go to state 35
    tableitem  go to state 36
    call       go to state 113


State 61

   76 indexedelem: left_curly . expr colon expr right_curly

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 115
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 62

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr
   70 elist_l: expr .

    AND           shift, and go to state 74
    OR            shift, and go to state 75
    plus          shift, and go to state 76
    minus         shift, and go to state 77
    mul           shift, and go to state 78
    division      shift, and go to state 79
    mod           shift, and go to state 80
    b_equals      shift, and go to state 81
    b_not_equal   shift, and go to state 82
    b_greater     shift, and go to state 83
    b_greater_eq  shift, and go to state 84
    b_less        shift, and go to state 85
    b_less_eq     shift, and go to state 86

    $default  reduce using rule 70 (elist_l)


State 63

   71 elist_l: elist_l . comma expr
   72 elist: elist_l .

    comma  shift, and go to state 116

    $default  reduce using rule 72 (elist)


State 64

   74 objectdef: left_bracket elist . right_bracket

    right_bracket  shift, and go to state 117


State 65

   77 indexed: indexedelem .

    $default  reduce using rule 77 (indexed)


State 66

   75 objectdef: left_bracket indexed . right_bracket
   78 indexed: indexed . comma indexedelem

    right_bracket  shift, and go to state 118
    comma          shift, and go to state 119


State 67

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr
   35 term: left_parenthesis expr . right_parenthesis

    AND                shift, and go to state 74
    OR                 shift, and go to state 75
    plus               shift, and go to state 76
    minus              shift, and go to state 77
    mul                shift, and go to state 78
    division           shift, and go to state 79
    mod                shift, and go to state 80
    b_equals           shift, and go to state 81
    b_not_equal        shift, and go to state 82
    b_greater          shift, and go to state 83
    b_greater_eq       shift, and go to state 84
    b_less             shift, and go to state 85
    b_less_eq          shift, and go to state 86
    right_parenthesis  shift, and go to state 120


State 68

   49 primary: left_parenthesis funcdef . right_parenthesis
   64 call: left_parenthesis funcdef . right_parenthesis left_parenthesis elist right_parenthesis

    right_parenthesis  shift, and go to state 121


State 69

   53 lvalue: double_colon id .

    $default  reduce using rule 53 (lvalue)


State 70

    0 $accept: program $end .

    $default  accept


State 71

   82 block: left_curly . $@8 block_l right_curly

    $default  reduce using rule 81 ($@8)

    $@8  go to state 122


State 72

    8 stmt: $@1 block .

    $default  reduce using rule 8 (stmt)


State 73

   13 statements: statements stmt .

    $default  reduce using rule 13 (statements)


State 74

   34 boolexpr: expr AND . $@3 M expr

    $default  reduce using rule 33 ($@3)

    $@3  go to state 123


State 75

   32 boolexpr: expr OR . $@2 M expr

    $default  reduce using rule 31 ($@2)

    $@2  go to state 124


State 76

   20 arithexpr: expr plus . expr

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 125
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 77

   21 arithexpr: expr minus . expr

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 126
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 78

   22 arithexpr: expr mul . expr

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 127
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 79

   23 arithexpr: expr division . expr

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 128
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 80

   24 arithexpr: expr mod . expr

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 129
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 81

   29 relexpr: expr b_equals . expr

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 130
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 82

   30 relexpr: expr b_not_equal . expr

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 131
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 83

   25 relexpr: expr b_greater . expr

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 132
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 84

   27 relexpr: expr b_greater_eq . expr

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 133
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 85

   26 relexpr: expr b_less . expr

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 134
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 86

   28 relexpr: expr b_less_eq . expr

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 135
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 87

    2 stmt: expr semicolon .

    $default  reduce using rule 2 (stmt)


State 88

   45 assignexpr: lvalue assign . expr

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 136
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 89

   40 term: lvalue increment .

    $default  reduce using rule 40 (term)


State 90

   43 term: lvalue decrement .

    $default  reduce using rule 43 (term)


State 91

   67 normcall: left_parenthesis . elist right_parenthesis

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    $default  reduce using rule 73 (elist)

    expr        go to state 62
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    elist_l     go to state 63
    elist       go to state 137
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 92

   69 methodcall: double_dot . method_id left_parenthesis elist right_parenthesis

    id  shift, and go to state 138

    method_id  go to state 139


State 93

   59 tableitem: lvalue $@6 . dot id

    dot  shift, and go to state 140


State 94

   61 tableitem: lvalue $@7 . left_bracket expr right_bracket

    left_bracket  shift, and go to state 141


State 95

   63 call: lvalue callsuffix .

    $default  reduce using rule 63 (call)


State 96

   65 callsuffix: normcall .

    $default  reduce using rule 65 (callsuffix)


State 97

   66 callsuffix: methodcall .

    $default  reduce using rule 66 (callsuffix)


State 98

   57 member: call left_bracket . expr right_bracket

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 142
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 99

   62 call: call left_parenthesis . elist right_parenthesis

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    $default  reduce using rule 73 (elist)

    expr        go to state 62
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    elist_l     go to state 63
    elist       go to state 143
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 100

   56 member: call dot . id

    id  shift, and go to state 144


State 101

  102 ifstmt: ifprefix stmt . elseprefix stmt
  103       | ifprefix stmt .

    ELSE  shift, and go to state 145

    ELSE      [reduce using rule 103 (ifstmt)]
    $default  reduce using rule 103 (ifstmt)

    elseprefix  go to state 146


State 102

  105 whilecond: left_parenthesis . expr right_parenthesis

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 147
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 103

  106 whilestmt: whilestart whilecond . loopstmt

    $default  reduce using rule 111 (loopstart)

    loopstart  go to state 148
    loopstmt   go to state 149


State 104

   86 func_prefix: function . func_name

    id  shift, and go to state 150

    $default  reduce using rule 84 (func_name)

    func_name  go to state 151


State 105

   85 funcdef: N func_prefix . func_args func_body

    left_parenthesis  shift, and go to state 152

    func_args  go to state 153


State 106

  110 forstmt: forprefix N . elist right_parenthesis N loopstmt N

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    $default  reduce using rule 73 (elist)

    expr        go to state 62
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    elist_l     go to state 63
    elist       go to state 154
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 107

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr
  100 ifprefix: IF left_parenthesis expr . right_parenthesis

    AND                shift, and go to state 74
    OR                 shift, and go to state 75
    plus               shift, and go to state 76
    minus              shift, and go to state 77
    mul                shift, and go to state 78
    division           shift, and go to state 79
    mod                shift, and go to state 80
    b_equals           shift, and go to state 81
    b_not_equal        shift, and go to state 82
    b_greater          shift, and go to state 83
    b_greater_eq       shift, and go to state 84
    b_less             shift, and go to state 85
    b_less_eq          shift, and go to state 86
    right_parenthesis  shift, and go to state 155


State 108

  109 forprefix: FOR left_parenthesis elist . semicolon M expr semicolon

    semicolon  shift, and go to state 156


State 109

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr
  117 returnstmt: RETURN $@9 expr . semicolon

    AND           shift, and go to state 74
    OR            shift, and go to state 75
    plus          shift, and go to state 76
    minus         shift, and go to state 77
    mul           shift, and go to state 78
    division      shift, and go to state 79
    mod           shift, and go to state 80
    b_equals      shift, and go to state 81
    b_not_equal   shift, and go to state 82
    b_greater     shift, and go to state 83
    b_greater_eq  shift, and go to state 84
    b_less        shift, and go to state 85
    b_less_eq     shift, and go to state 86
    semicolon     shift, and go to state 157


State 110

  119 returnstmt: RETURN $@10 semicolon .

    $default  reduce using rule 119 (returnstmt)


State 111

   64 call: left_parenthesis . funcdef right_parenthesis left_parenthesis elist right_parenthesis

    $default  reduce using rule 107 (N)

    funcdef  go to state 158
    N        go to state 46


State 112

   39 term: increment $@4 lvalue .
   59 tableitem: lvalue . $@6 dot id
   61          | lvalue . $@7 left_bracket expr right_bracket
   63 call: lvalue . callsuffix

    left_parenthesis  shift, and go to state 91
    double_dot        shift, and go to state 92

    left_bracket  reduce using rule 60 ($@7)
    dot           reduce using rule 58 ($@6)
    $default      reduce using rule 39 (term)

    $@6         go to state 93
    $@7         go to state 94
    callsuffix  go to state 95
    normcall    go to state 96
    methodcall  go to state 97


State 113

   56 member: call . dot id
   57       | call . left_bracket expr right_bracket
   62 call: call . left_parenthesis elist right_parenthesis

    left_bracket      shift, and go to state 98
    left_parenthesis  shift, and go to state 99
    dot               shift, and go to state 100


State 114

   42 term: decrement $@5 lvalue .
   59 tableitem: lvalue . $@6 dot id
   61          | lvalue . $@7 left_bracket expr right_bracket
   63 call: lvalue . callsuffix

    left_parenthesis  shift, and go to state 91
    double_dot        shift, and go to state 92

    left_bracket  reduce using rule 60 ($@7)
    dot           reduce using rule 58 ($@6)
    $default      reduce using rule 42 (term)

    $@6         go to state 93
    $@7         go to state 94
    callsuffix  go to state 95
    normcall    go to state 96
    methodcall  go to state 97


State 115

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr
   76 indexedelem: left_curly expr . colon expr right_curly

    AND           shift, and go to state 74
    OR            shift, and go to state 75
    plus          shift, and go to state 76
    minus         shift, and go to state 77
    mul           shift, and go to state 78
    division      shift, and go to state 79
    mod           shift, and go to state 80
    b_equals      shift, and go to state 81
    b_not_equal   shift, and go to state 82
    b_greater     shift, and go to state 83
    b_greater_eq  shift, and go to state 84
    b_less        shift, and go to state 85
    b_less_eq     shift, and go to state 86
    colon         shift, and go to state 159


State 116

   71 elist_l: elist_l comma . expr

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 160
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 117

   74 objectdef: left_bracket elist right_bracket .

    $default  reduce using rule 74 (objectdef)


State 118

   75 objectdef: left_bracket indexed right_bracket .

    $default  reduce using rule 75 (objectdef)


State 119

   78 indexed: indexed comma . indexedelem

    left_curly  shift, and go to state 61

    indexedelem  go to state 161


State 120

   35 term: left_parenthesis expr right_parenthesis .

    $default  reduce using rule 35 (term)


State 121

   49 primary: left_parenthesis funcdef right_parenthesis .
   64 call: left_parenthesis funcdef right_parenthesis . left_parenthesis elist right_parenthesis

    left_parenthesis  shift, and go to state 162

    $default  reduce using rule 49 (primary)


State 122

   82 block: left_curly $@8 . block_l right_curly

    $default  reduce using rule 80 (block_l)

    block_l  go to state 163


State 123

   34 boolexpr: expr AND $@3 . M expr

    $default  reduce using rule 108 (M)

    M  go to state 164


State 124

   32 boolexpr: expr OR $@2 . M expr

    $default  reduce using rule 108 (M)

    M  go to state 165


State 125

   20 arithexpr: expr . plus expr
   20          | expr plus expr .
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr

    mul       shift, and go to state 78
    division  shift, and go to state 79
    mod       shift, and go to state 80

    $default  reduce using rule 20 (arithexpr)


State 126

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   21          | expr minus expr .
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr

    mul       shift, and go to state 78
    division  shift, and go to state 79
    mod       shift, and go to state 80

    $default  reduce using rule 21 (arithexpr)


State 127

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   22          | expr mul expr .
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr

    $default  reduce using rule 22 (arithexpr)


State 128

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   23          | expr division expr .
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr

    $default  reduce using rule 23 (arithexpr)


State 129

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   24          | expr mod expr .
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr

    $default  reduce using rule 24 (arithexpr)


State 130

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   29        | expr b_equals expr .
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr

    plus          shift, and go to state 76
    minus         shift, and go to state 77
    mul           shift, and go to state 78
    division      shift, and go to state 79
    mod           shift, and go to state 80
    b_greater     shift, and go to state 83
    b_greater_eq  shift, and go to state 84
    b_less        shift, and go to state 85
    b_less_eq     shift, and go to state 86

    b_equals     error (nonassociative)
    b_not_equal  error (nonassociative)

    $default  reduce using rule 29 (relexpr)


State 131

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   30        | expr b_not_equal expr .
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr

    plus          shift, and go to state 76
    minus         shift, and go to state 77
    mul           shift, and go to state 78
    division      shift, and go to state 79
    mod           shift, and go to state 80
    b_greater     shift, and go to state 83
    b_greater_eq  shift, and go to state 84
    b_less        shift, and go to state 85
    b_less_eq     shift, and go to state 86

    b_equals     error (nonassociative)
    b_not_equal  error (nonassociative)

    $default  reduce using rule 30 (relexpr)


State 132

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   25        | expr b_greater expr .
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr

    plus      shift, and go to state 76
    minus     shift, and go to state 77
    mul       shift, and go to state 78
    division  shift, and go to state 79
    mod       shift, and go to state 80

    b_greater     error (nonassociative)
    b_greater_eq  error (nonassociative)
    b_less        error (nonassociative)
    b_less_eq     error (nonassociative)

    $default  reduce using rule 25 (relexpr)


State 133

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   27        | expr b_greater_eq expr .
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr

    plus      shift, and go to state 76
    minus     shift, and go to state 77
    mul       shift, and go to state 78
    division  shift, and go to state 79
    mod       shift, and go to state 80

    b_greater     error (nonassociative)
    b_greater_eq  error (nonassociative)
    b_less        error (nonassociative)
    b_less_eq     error (nonassociative)

    $default  reduce using rule 27 (relexpr)


State 134

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   26        | expr b_less expr .
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr

    plus      shift, and go to state 76
    minus     shift, and go to state 77
    mul       shift, and go to state 78
    division  shift, and go to state 79
    mod       shift, and go to state 80

    b_greater     error (nonassociative)
    b_greater_eq  error (nonassociative)
    b_less        error (nonassociative)
    b_less_eq     error (nonassociative)

    $default  reduce using rule 26 (relexpr)


State 135

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   28        | expr b_less_eq expr .
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr

    plus      shift, and go to state 76
    minus     shift, and go to state 77
    mul       shift, and go to state 78
    division  shift, and go to state 79
    mod       shift, and go to state 80

    b_greater     error (nonassociative)
    b_greater_eq  error (nonassociative)
    b_less        error (nonassociative)
    b_less_eq     error (nonassociative)

    $default  reduce using rule 28 (relexpr)


State 136

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr
   45 assignexpr: lvalue assign expr .

    AND           shift, and go to state 74
    OR            shift, and go to state 75
    plus          shift, and go to state 76
    minus         shift, and go to state 77
    mul           shift, and go to state 78
    division      shift, and go to state 79
    mod           shift, and go to state 80
    b_equals      shift, and go to state 81
    b_not_equal   shift, and go to state 82
    b_greater     shift, and go to state 83
    b_greater_eq  shift, and go to state 84
    b_less        shift, and go to state 85
    b_less_eq     shift, and go to state 86

    $default  reduce using rule 45 (assignexpr)


State 137

   67 normcall: left_parenthesis elist . right_parenthesis

    right_parenthesis  shift, and go to state 166


State 138

   68 method_id: id .

    $default  reduce using rule 68 (method_id)


State 139

   69 methodcall: double_dot method_id . left_parenthesis elist right_parenthesis

    left_parenthesis  shift, and go to state 167


State 140

   59 tableitem: lvalue $@6 dot . id

    id  shift, and go to state 168


State 141

   61 tableitem: lvalue $@7 left_bracket . expr right_bracket

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 169
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 142

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr
   57 member: call left_bracket expr . right_bracket

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    plus           shift, and go to state 76
    minus          shift, and go to state 77
    mul            shift, and go to state 78
    division       shift, and go to state 79
    mod            shift, and go to state 80
    b_equals       shift, and go to state 81
    b_not_equal    shift, and go to state 82
    b_greater      shift, and go to state 83
    b_greater_eq   shift, and go to state 84
    b_less         shift, and go to state 85
    b_less_eq      shift, and go to state 86
    right_bracket  shift, and go to state 170


State 143

   62 call: call left_parenthesis elist . right_parenthesis

    right_parenthesis  shift, and go to state 171


State 144

   56 member: call dot id .

    $default  reduce using rule 56 (member)


State 145

  101 elseprefix: ELSE .

    $default  reduce using rule 101 (elseprefix)


State 146

  102 ifstmt: ifprefix stmt elseprefix . stmt

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    IF                shift, and go to state 5
    WHILE             shift, and go to state 6
    FOR               shift, and go to state 7
    BREAK             shift, and go to state 8
    CONTINUE          shift, and go to state 9
    RETURN            shift, and go to state 10
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    semicolon         shift, and go to state 21
    double_colon      shift, and go to state 22

    function  reduce using rule 107 (N)
    $default  reduce using rule 7 ($@1)

    stmt        go to state 172
    $@1         go to state 25
    expr        go to state 27
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    funcdef     go to state 39
    number      go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    N           go to state 46
    forprefix   go to state 47
    forstmt     go to state 48
    returnstmt  go to state 49


State 147

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr
  105 whilecond: left_parenthesis expr . right_parenthesis

    AND                shift, and go to state 74
    OR                 shift, and go to state 75
    plus               shift, and go to state 76
    minus              shift, and go to state 77
    mul                shift, and go to state 78
    division           shift, and go to state 79
    mod                shift, and go to state 80
    b_equals           shift, and go to state 81
    b_not_equal        shift, and go to state 82
    b_greater          shift, and go to state 83
    b_greater_eq       shift, and go to state 84
    b_less             shift, and go to state 85
    b_less_eq          shift, and go to state 86
    right_parenthesis  shift, and go to state 173


State 148

  113 loopstmt: loopstart . stmt loopend

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    IF                shift, and go to state 5
    WHILE             shift, and go to state 6
    FOR               shift, and go to state 7
    BREAK             shift, and go to state 8
    CONTINUE          shift, and go to state 9
    RETURN            shift, and go to state 10
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    semicolon         shift, and go to state 21
    double_colon      shift, and go to state 22

    function  reduce using rule 107 (N)
    $default  reduce using rule 7 ($@1)

    stmt        go to state 174
    $@1         go to state 25
    expr        go to state 27
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    funcdef     go to state 39
    number      go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    N           go to state 46
    forprefix   go to state 47
    forstmt     go to state 48
    returnstmt  go to state 49


State 149

  106 whilestmt: whilestart whilecond loopstmt .

    $default  reduce using rule 106 (whilestmt)


State 150

   83 func_name: id .

    $default  reduce using rule 83 (func_name)


State 151

   86 func_prefix: function func_name .

    $default  reduce using rule 86 (func_prefix)


State 152

   87 func_args: left_parenthesis . idlist right_parenthesis

    id  shift, and go to state 175

    $default  reduce using rule 99 (idlist)

    idlist_l  go to state 176
    idlist    go to state 177


State 153

   85 funcdef: N func_prefix func_args . func_body

    $default  reduce using rule 114 (func_block_start)

    func_body         go to state 178
    func_block_start  go to state 179


State 154

  110 forstmt: forprefix N elist . right_parenthesis N loopstmt N

    right_parenthesis  shift, and go to state 180


State 155

  100 ifprefix: IF left_parenthesis expr right_parenthesis .

    $default  reduce using rule 100 (ifprefix)


State 156

  109 forprefix: FOR left_parenthesis elist semicolon . M expr semicolon

    $default  reduce using rule 108 (M)

    M  go to state 181


State 157

  117 returnstmt: RETURN $@9 expr semicolon .

    $default  reduce using rule 117 (returnstmt)


State 158

   64 call: left_parenthesis funcdef . right_parenthesis left_parenthesis elist right_parenthesis

    right_parenthesis  shift, and go to state 182


State 159

   76 indexedelem: left_curly expr colon . expr right_curly

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 183
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 160

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr
   71 elist_l: elist_l comma expr .

    AND           shift, and go to state 74
    OR            shift, and go to state 75
    plus          shift, and go to state 76
    minus         shift, and go to state 77
    mul           shift, and go to state 78
    division      shift, and go to state 79
    mod           shift, and go to state 80
    b_equals      shift, and go to state 81
    b_not_equal   shift, and go to state 82
    b_greater     shift, and go to state 83
    b_greater_eq  shift, and go to state 84
    b_less        shift, and go to state 85
    b_less_eq     shift, and go to state 86

    $default  reduce using rule 71 (elist_l)


State 161

   78 indexed: indexed comma indexedelem .

    $default  reduce using rule 78 (indexed)


State 162

   64 call: left_parenthesis funcdef right_parenthesis left_parenthesis . elist right_parenthesis

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    $default  reduce using rule 73 (elist)

    expr        go to state 62
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    elist_l     go to state 63
    elist       go to state 184
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 163

   79 block_l: block_l . stmt
   82 block: left_curly $@8 block_l . right_curly

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    IF                shift, and go to state 5
    WHILE             shift, and go to state 6
    FOR               shift, and go to state 7
    BREAK             shift, and go to state 8
    CONTINUE          shift, and go to state 9
    RETURN            shift, and go to state 10
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    right_curly       shift, and go to state 185
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    semicolon         shift, and go to state 21
    double_colon      shift, and go to state 22

    function  reduce using rule 107 (N)
    $default  reduce using rule 7 ($@1)

    stmt        go to state 186
    $@1         go to state 25
    expr        go to state 27
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    funcdef     go to state 39
    number      go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    N           go to state 46
    forprefix   go to state 47
    forstmt     go to state 48
    returnstmt  go to state 49


State 164

   34 boolexpr: expr AND $@3 M . expr

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 187
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 165

   32 boolexpr: expr OR $@2 M . expr

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 188
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 166

   67 normcall: left_parenthesis elist right_parenthesis .

    $default  reduce using rule 67 (normcall)


State 167

   69 methodcall: double_dot method_id left_parenthesis . elist right_parenthesis

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    $default  reduce using rule 73 (elist)

    expr        go to state 62
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    elist_l     go to state 63
    elist       go to state 189
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 168

   59 tableitem: lvalue $@6 dot id .

    $default  reduce using rule 59 (tableitem)


State 169

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr
   61 tableitem: lvalue $@7 left_bracket expr . right_bracket

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    plus           shift, and go to state 76
    minus          shift, and go to state 77
    mul            shift, and go to state 78
    division       shift, and go to state 79
    mod            shift, and go to state 80
    b_equals       shift, and go to state 81
    b_not_equal    shift, and go to state 82
    b_greater      shift, and go to state 83
    b_greater_eq   shift, and go to state 84
    b_less         shift, and go to state 85
    b_less_eq      shift, and go to state 86
    right_bracket  shift, and go to state 190


State 170

   57 member: call left_bracket expr right_bracket .

    $default  reduce using rule 57 (member)


State 171

   62 call: call left_parenthesis elist right_parenthesis .

    $default  reduce using rule 62 (call)


State 172

  102 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 102 (ifstmt)


State 173

  105 whilecond: left_parenthesis expr right_parenthesis .

    $default  reduce using rule 105 (whilecond)


State 174

  113 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 112 (loopend)

    loopend  go to state 191


State 175

   96 idlist_l: id .

    $default  reduce using rule 96 (idlist_l)


State 176

   97 idlist_l: idlist_l . comma id
   98 idlist: idlist_l .

    comma  shift, and go to state 192

    $default  reduce using rule 98 (idlist)


State 177

   87 func_args: left_parenthesis idlist . right_parenthesis

    right_parenthesis  shift, and go to state 193


State 178

   85 funcdef: N func_prefix func_args func_body .

    $default  reduce using rule 85 (funcdef)


State 179

   88 func_body: func_block_start . block func_block_end

    left_curly  shift, and go to state 71

    block  go to state 194


State 180

  110 forstmt: forprefix N elist right_parenthesis . N loopstmt N

    $default  reduce using rule 107 (N)

    N  go to state 195


State 181

  109 forprefix: FOR left_parenthesis elist semicolon M . expr semicolon

    NOT               shift, and go to state 1
    TRUE              shift, and go to state 2
    FALSE             shift, and go to state 3
    NIL               shift, and go to state 4
    local             shift, and go to state 11
    minus             shift, and go to state 12
    increment         shift, and go to state 13
    decrement         shift, and go to state 14
    integer           shift, and go to state 15
    real              shift, and go to state 16
    id                shift, and go to state 17
    STRING            shift, and go to state 18
    left_bracket      shift, and go to state 19
    left_parenthesis  shift, and go to state 20
    double_colon      shift, and go to state 22

    expr        go to state 196
    arithexpr   go to state 28
    relexpr     go to state 29
    boolexpr    go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    tableitem   go to state 36
    call        go to state 37
    objectdef   go to state 38
    number      go to state 40
    const       go to state 41


State 182

   64 call: left_parenthesis funcdef right_parenthesis . left_parenthesis elist right_parenthesis

    left_parenthesis  shift, and go to state 162


State 183

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr
   76 indexedelem: left_curly expr colon expr . right_curly

    AND           shift, and go to state 74
    OR            shift, and go to state 75
    plus          shift, and go to state 76
    minus         shift, and go to state 77
    mul           shift, and go to state 78
    division      shift, and go to state 79
    mod           shift, and go to state 80
    b_equals      shift, and go to state 81
    b_not_equal   shift, and go to state 82
    b_greater     shift, and go to state 83
    b_greater_eq  shift, and go to state 84
    b_less        shift, and go to state 85
    b_less_eq     shift, and go to state 86
    right_curly   shift, and go to state 197


State 184

   64 call: left_parenthesis funcdef right_parenthesis left_parenthesis elist . right_parenthesis

    right_parenthesis  shift, and go to state 198


State 185

   82 block: left_curly $@8 block_l right_curly .

    $default  reduce using rule 82 (block)


State 186

   79 block_l: block_l stmt .

    $default  reduce using rule 79 (block_l)


State 187

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr
   34         | expr AND $@3 M expr .

    plus          shift, and go to state 76
    minus         shift, and go to state 77
    mul           shift, and go to state 78
    division      shift, and go to state 79
    mod           shift, and go to state 80
    b_equals      shift, and go to state 81
    b_not_equal   shift, and go to state 82
    b_greater     shift, and go to state 83
    b_greater_eq  shift, and go to state 84
    b_less        shift, and go to state 85
    b_less_eq     shift, and go to state 86

    $default  reduce using rule 34 (boolexpr)


State 188

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   32         | expr OR $@2 M expr .
   34         | expr . AND $@3 M expr

    AND           shift, and go to state 74
    plus          shift, and go to state 76
    minus         shift, and go to state 77
    mul           shift, and go to state 78
    division      shift, and go to state 79
    mod           shift, and go to state 80
    b_equals      shift, and go to state 81
    b_not_equal   shift, and go to state 82
    b_greater     shift, and go to state 83
    b_greater_eq  shift, and go to state 84
    b_less        shift, and go to state 85
    b_less_eq     shift, and go to state 86

    $default  reduce using rule 32 (boolexpr)


State 189

   69 methodcall: double_dot method_id left_parenthesis elist . right_parenthesis

    right_parenthesis  shift, and go to state 199


State 190

   61 tableitem: lvalue $@7 left_bracket expr right_bracket .

    $default  reduce using rule 61 (tableitem)


State 191

  113 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 113 (loopstmt)


State 192

   97 idlist_l: idlist_l comma . id

    id  shift, and go to state 200


State 193

   87 func_args: left_parenthesis idlist right_parenthesis .

    $default  reduce using rule 87 (func_args)


State 194

   88 func_body: func_block_start block . func_block_end

    $default  reduce using rule 115 (func_block_end)

    func_block_end  go to state 201


State 195

  110 forstmt: forprefix N elist right_parenthesis N . loopstmt N

    $default  reduce using rule 111 (loopstart)

    loopstart  go to state 148
    loopstmt   go to state 202


State 196

   20 arithexpr: expr . plus expr
   21          | expr . minus expr
   22          | expr . mul expr
   23          | expr . division expr
   24          | expr . mod expr
   25 relexpr: expr . b_greater expr
   26        | expr . b_less expr
   27        | expr . b_greater_eq expr
   28        | expr . b_less_eq expr
   29        | expr . b_equals expr
   30        | expr . b_not_equal expr
   32 boolexpr: expr . OR $@2 M expr
   34         | expr . AND $@3 M expr
  109 forprefix: FOR left_parenthesis elist semicolon M expr . semicolon

    AND           shift, and go to state 74
    OR            shift, and go to state 75
    plus          shift, and go to state 76
    minus         shift, and go to state 77
    mul           shift, and go to state 78
    division      shift, and go to state 79
    mod           shift, and go to state 80
    b_equals      shift, and go to state 81
    b_not_equal   shift, and go to state 82
    b_greater     shift, and go to state 83
    b_greater_eq  shift, and go to state 84
    b_less        shift, and go to state 85
    b_less_eq     shift, and go to state 86
    semicolon     shift, and go to state 203


State 197

   76 indexedelem: left_curly expr colon expr right_curly .

    $default  reduce using rule 76 (indexedelem)


State 198

   64 call: left_parenthesis funcdef right_parenthesis left_parenthesis elist right_parenthesis .

    $default  reduce using rule 64 (call)


State 199

   69 methodcall: double_dot method_id left_parenthesis elist right_parenthesis .

    $default  reduce using rule 69 (methodcall)


State 200

   97 idlist_l: idlist_l comma id .

    $default  reduce using rule 97 (idlist_l)


State 201

   88 func_body: func_block_start block func_block_end .

    $default  reduce using rule 88 (func_body)


State 202

  110 forstmt: forprefix N elist right_parenthesis N loopstmt . N

    $default  reduce using rule 107 (N)

    N  go to state 204


State 203

  109 forprefix: FOR left_parenthesis elist semicolon M expr semicolon .

    $default  reduce using rule 109 (forprefix)


State 204

  110 forstmt: forprefix N elist right_parenthesis N loopstmt N .

    $default  reduce using rule 110 (forstmt)
