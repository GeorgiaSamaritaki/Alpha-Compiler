(inserting sin in scope: 0 as library function)
(inserting cos in scope: 0 as library function)
(inserting sqrt in scope: 0 as library function)
(inserting print in scope: 0 as library function)
(inserting input in scope: 0 as library function)
(inserting typeof in scope: 0 as library function)
(inserting argument in scope: 0 as library function)
(inserting strtonum in scope: 0 as library function)
(inserting objectcopy in scope: 0 as library function)
(inserting totalarguments in scope: 0 as library function)
(inserting objectmemberkeys in scope: 0 as library function)
(inserting objecttotalmembers in scope: 0 as library function)


statements->empty
func_name->func_id 
(inserting f in scope: 1 as user function)
funcdef->( idlist->emptyidlist 
funcdef->) 


-----enter block ------ 
local id f 
number->integer 
const->number 
primary->const 
term->primary 
expr->term 
[1;31m
_____________ERROR:line 2, before token: ";" message: Cannot assign to function____________
[0massignexpr->lvalue=expr 
expr->assignexpr 
stmt->expr';' 
func_name->func_id 
(inserting g in scope: 2 as user function)
funcdef->( idlist->emptyidlist 
funcdef->) 


-----enter block ------ 
lvalue->ids 'f'
number->integer 
const->number 
primary->const 
term->primary 
expr->term 
[1;31m
_____________ERROR:line 4, before token: ";" message: Cant reference variable out of scope____________
[0massignexpr->lvalue=expr 
expr->assignexpr 
stmt->expr';' 
lvalue->ids 'f'
elist->empty 
normcall->(elist) 
callsuffix->normcall 
here!!!!!
(inserting $t0 in scope: 2 as local var)
call->lvaluecallsuffix 
primary->call 
term->primary 
expr->term 
returnstmt=>"return expr;" 
stmt->returnstmt 


-----exit block ------

GERE
stmt->funcdef 

-----exit block ------

GERE
stmt->funcdef 
statements ->statements stmt
Finished

---------------------------------- Scope 0 ----------------------------------
 "objecttotalmembers"  [library function]  (lineno:  0) (scope: 0) (active:1)
   "objectmemberkeys"  [library function]  (lineno:  0) (scope: 0) (active:1)
     "totalarguments"  [library function]  (lineno:  0) (scope: 0) (active:1)
         "objectcopy"  [library function]  (lineno:  0) (scope: 0) (active:1)
           "strtonum"  [library function]  (lineno:  0) (scope: 0) (active:1)
           "argument"  [library function]  (lineno:  0) (scope: 0) (active:1)
             "typeof"  [library function]  (lineno:  0) (scope: 0) (active:1)
              "input"  [library function]  (lineno:  0) (scope: 0) (active:1)
              "print"  [library function]  (lineno:  0) (scope: 0) (active:1)
               "sqrt"  [library function]  (lineno:  0) (scope: 0) (active:1)
                "cos"  [library function]  (lineno:  0) (scope: 0) (active:1)
                "sin"  [library function]  (lineno:  0) (scope: 0) (active:1)

---------------------------------- Scope 1 ----------------------------------
                  "f"     [user function]  (lineno:  1) (scope: 1) (active:0)[args:]

---------------------------------- Scope 2 ----------------------------------
                "$t0"         [local var]  (lineno:  1) (scope: 2) (active:0)
                  "g"     [user function]  (lineno:  3) (scope: 2) (active:0)[args:]
